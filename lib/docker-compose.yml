# # docker-compose up -d --remove-orphans
# version: '3'

# services:
#   zookeeper:
#     image: zookeeper:3.4.9
#     hostname: zookeeper
#     ports:
#       - "2181:2181"
#     environment:
#         ZOO_MY_ID: 1
#         ZOO_PORT: 2181
#         ZOO_SERVERS: server.1=zookeeper:2888:3888
#     # volumes:
#     #   - ./data/zookeeper/data:/data
#     #   - ./data/zookeeper/datalog:/datalog

#   kafka1:
#     image: confluentinc/cp-kafka:5.3.0
#     hostname: kafka1
#     ports:
#       - "9091:9091"
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#       KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#       KAFKA_BROKER_ID: 1
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#     # volumes:
#     #   - ./data/kafka1/data:/var/lib/kafka/data
#     depends_on:
#       - zookeeper

#   kafka2:
#     image: confluentinc/cp-kafka:5.3.0
#     hostname: kafka2
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#       KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#       KAFKA_BROKER_ID: 2
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#     # volumes:
#     #   - ./data/kafka2/data:/var/lib/kafka/data
#     depends_on:
#       - zookeeper


#   kafdrop:
#     image: obsidiandynamics/kafdrop
#     restart: "no"
#     ports:
#       - "9000:9000"
#     environment:
#       KAFKA_BROKERCONNECT: "kafka1:19091,kafka2:19092"
#       JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
#     depends_on:
#       - "kafka1"
#       - "kafka2"


version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29091:29091
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9091,PLAINTEXT_HOST://localhost:29091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka1
      - kafka2
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9091